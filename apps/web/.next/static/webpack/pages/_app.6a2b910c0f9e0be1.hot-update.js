"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminGetAllOrders: function() { return /* binding */ adminGetAllOrders; },\n/* harmony export */   adminGetOrderDetails: function() { return /* binding */ adminGetOrderDetails; },\n/* harmony export */   adminGetStats: function() { return /* binding */ adminGetStats; },\n/* harmony export */   adminUpdateOrderStatus: function() { return /* binding */ adminUpdateOrderStatus; },\n/* harmony export */   createDraftOrder: function() { return /* binding */ createDraftOrder; },\n/* harmony export */   createStripeCheckoutSession: function() { return /* binding */ createStripeCheckoutSession; },\n/* harmony export */   createStripeSubscriptionSession: function() { return /* binding */ createStripeSubscriptionSession; },\n/* harmony export */   getAdminChartData: function() { return /* binding */ getAdminChartData; },\n/* harmony export */   getAdminStats: function() { return /* binding */ getAdminStats; },\n/* harmony export */   getMe: function() { return /* binding */ getMe; },\n/* harmony export */   getOrderById: function() { return /* binding */ getOrderById; },\n/* harmony export */   getTemplates: function() { return /* binding */ getTemplates; },\n/* harmony export */   getUserOrders: function() { return /* binding */ getUserOrders; },\n/* harmony export */   initiateMpesaPayment: function() { return /* binding */ initiateMpesaPayment; },\n/* harmony export */   loginUser: function() { return /* binding */ loginUser; },\n/* harmony export */   registerUser: function() { return /* binding */ registerUser; },\n/* harmony export */   uploadPremiumFiles: function() { return /* binding */ uploadPremiumFiles; }\n/* harmony export */ });\nconst API_URL = \"http://localhost:3001/api\"; // Our backend URL\nasync function fetcher(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const token = localStorage.getItem(\"authToken\");\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        ...options.headers\n    };\n    if (token) {\n        headers[\"Authorization\"] = \"Bearer \".concat(token);\n    }\n    const response = await fetch(\"\".concat(API_URL).concat(url), {\n        ...options,\n        headers\n    });\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"An API error occurred\");\n    }\n    return response.json();\n}\n// --- Auth Endpoints ---\nconst registerUser = (data)=>{\n    return fetcher(\"/auth/register\", {\n        method: \"POST\",\n        body: JSON.stringify(data)\n    });\n};\nconst loginUser = (data)=>{\n    return fetcher(\"/auth/login\", {\n        method: \"POST\",\n        body: JSON.stringify(data)\n    });\n};\nconst getMe = ()=>{\n    return fetcher(\"/auth/me\");\n};\n// --- Order Endpoints ---\nconst getUserOrders = ()=>{\n    return fetcher(\"/orders\");\n};\n// --- Template Endpoints ---\nconst getTemplates = ()=>{\n    return fetcher(\"/templates\");\n};\n// --- Payment Endpoints ---\nconst createStripeCheckoutSession = (data)=>{\n    return fetcher(\"/orders/create-checkout-session\", {\n        method: \"POST\",\n        body: JSON.stringify(data)\n    });\n};\nconst createStripeSubscriptionSession = (priceId)=>{\n    return fetcher(\"/subscriptions/create-checkout-session\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            priceId\n        })\n    });\n};\nconst uploadPremiumFiles = async (formData)=>{\n    const token = localStorage.getItem(\"authToken\");\n    const response = await fetch(\"\".concat(API_URL, \"/uploads/premium-files\"), {\n        method: \"POST\",\n        headers: {\n            // DO NOT set 'Content-Type'. The browser sets it automatically for FormData.\n            \"Authorization\": \"Bearer \".concat(token)\n        },\n        body: formData\n    });\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"File upload failed\");\n    }\n    return response.json();\n};\nconst getOrderById = (orderId)=>{\n    return fetcher(\"/orders/\".concat(orderId));\n};\n// --- Admin Endpoints ---\nconst adminGetAllOrders = ()=>{\n    return fetcher(\"/admin/orders\");\n};\nconst adminGetOrderDetails = (orderId)=>{\n    return fetcher(\"/admin/orders/\".concat(orderId));\n};\nconst adminUpdateOrderStatus = (orderId, status)=>{\n    return fetcher(\"/orders/\".concat(orderId, \"/status\"), {\n        method: \"PATCH\",\n        body: JSON.stringify({\n            status\n        })\n    });\n};\n// --- NEW ANALYTICS FUNCTIONS ---\nconst getAdminStats = ()=>{\n    return fetcher(\"/admin/stats\");\n};\nconst getAdminChartData = ()=>{\n    return fetcher(\"/admin/chart-data\");\n};\nconst createDraftOrder = (templateId, type)=>{\n    return fetcher(\"/orders/draft\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            templateId,\n            type\n        })\n    });\n};\nconst adminGetStats = ()=>{\n    return fetcher(\"/admin/stats\");\n};\nconst initiateMpesaPayment = (data)=>{\n    return fetcher(\"/payments/mpesa/initiate\", {\n        method: \"POST\",\n        body: JSON.stringify(data)\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/api.ts\n"));

/***/ })

});